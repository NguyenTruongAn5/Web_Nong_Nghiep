@model X.PagedList.IPagedList<ProductModel>
@using X.PagedList.Mvc.Core
@{
    ViewData["title"] = "Product Title";
}
<table class="table">
    <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Name</th>
            <th scope="col">Slug</th>
            <th scope="col">Description</th>
            <th scope="col">Price</th>
            <th scope="col">Brand</th>
            <th scope="col">Category</th>
            <th scope="col">Image</th>
            <th scope="col">Remove</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th scope="row">@item.Id</th>
                <td>@item.Name</td>
                <td>@item.Slug</td>
                <td>
                    <div class="description-truncate" title="@item.Description">
                        @item.Description
                    </div>
                </td>
                <td>@item.Price</td>
                <td>@item.Brand.Name</td>
                <td>@item.Category.Name</td>
                <td><img src="~/media/products/@item.Image" width="100" asp-append-version="true"></td>
                <td>
                    <a asp-action="ExcuteRestore" class="btn btn-danger btn-sm confirmDeletion" asp-controller="Product" asp-route-Id="@item.Id">Restore</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    @Html.PagedListPager(Model, page=>Url.ActionLink("Index", "Product", new{page=page}))
</div>